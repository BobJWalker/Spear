step "azure-key-vault-retrieve-secrets" {
    name = "Azure Key Vault - Retrieve Secrets"

    action {
        properties = {
            Azure.KeyVault.RetrieveSecrets.Account = "Azure.Account"
            Azure.KeyVault.RetrieveSecrets.PrintVariableNames = "False"
            Azure.KeyVault.RetrieveSecrets.VaultName = "#{KeyVault.Azure.Name}"
            Azure.KeyVault.RetrieveSecrets.VaultSecrets = "#{KeyVault.Azure.Secrets.List}"
            Octopus.Action.Template.Id = "ActionTemplates-561"
            Octopus.Action.Template.Version = "2"
        }
        worker_pool = "homelab-k8s"
        worker_pool_variable = ""

        container {
            feed = "dockerhub"
            image = "#{Azure.ExecutionContainer.Name}"
        }
    }
}

process_template "verify-build-artifacts" {
    name = "Verify Build Artifacts"
    process_template_slug = "deploy-process-verify-build-artifacts"
    version_mask = "2.X"

    package_parameter "Template.SBOM.Artifact" {
        feed = "octopus-server-built-in"
        package_id = "Spear.SBOM"
    }

    parameter "Template.Git.AuthToken" {
        value = "#{KeyVault.GitHub.Token}"
    }

    parameter "Template.Verify.WorkerPool" {
        value = "#{Standards.Worker.Pool}"
    }

    parameter "Template.Verify.ExecutionContainerFeed" {
        value = "Feeds-1283"
    }
}

step "run-octopus-deploy-runbook" {
    name = "Verify Infrastructure"

    action {
        channels = ["default"]
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-141"
            Octopus.Action.Template.Version = "18"
            Run.Runbook.Api.Key = "#{KeyVault.Octopus.Api.Key}"
            Run.Runbook.AutoApproveManualInterventions = "No"
            Run.Runbook.Base.Url = "#{Octopus.Web.ServerUri}"
            Run.Runbook.CaCBranchName = "main"
            Run.Runbook.CancelInSeconds = "1800"
            Run.Runbook.CustomNotes.Toggle = "False"
            Run.Runbook.DateTime = "N/A"
            Run.Runbook.Environment.Name = "#{Octopus.Environment.Name}"
            Run.Runbook.Machines = "N/A"
            Run.Runbook.ManualIntervention.EnvironmentToUse = "#{Octopus.Environment.Name}"
            Run.Runbook.Name = "Create Infrastructure"
            Run.Runbook.Project.Name = "#{Octopus.Project.Name}"
            Run.Runbook.Space.Name = "#{Octopus.Space.Name}"
            Run.Runbook.UsePublishedSnapShot = "True"
            Run.Runbook.Waitforfinish = "True"
        }
        worker_pool_variable = "Standards.Worker.Pool"
    }
}

process_template "deploy-k8s-manifest" {
    name = "Deploy K8s Manifest"
    process_template_slug = "deploy-process-deploy-to-kubernetes-via-manifest"
    version_mask = "1.X"

    package_parameter "K8sTemplate.Container" {
        feed = "dockerhub"
        package_id = "bobjwalker99/spear"
    }

    parameter "K8sTemplate.Target.Tag" {
        value = "spear-web"
    }

    parameter "K8sTemplate.Git.Repo" {
        value = "https://github.com/BobJWalker/Spear.git"
    }

    parameter "K8sTemplate.Namespace" {
        value = "#{Standards.K8s.Namespace}"
    }

    parameter "K8sTemplate.Verification.Script.Path" {
        value = "scripts/VerifySuccessfulDeployment.ps1"
    }

    parameter "K8sTemplate.Worker.Pool" {
        value = "#{Standards.Worker.Pool}"
    }
}

step "slack-send-simple-notification" {
    condition = "Always"
    name = "Slack - Send Simple Notification"

    action {
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-101"
            Octopus.Action.Template.Version = "15"
            ssn_Channel = "trident-status"
            ssn_Color = "good"
            ssn_HookUrl = "#{Notification.Slack.Webhook.Url}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Body.Text}"
            ssn_Title = "#{Notification.DeploymentStatus.Subject.Text}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "homelab-k8s"
    }
}